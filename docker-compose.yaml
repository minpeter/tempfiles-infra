version: "3"

services:
  frontend:
    container_name: tempfiles-frontend
    image: ananjaemin/tempfiles-frontend:latest
    restart: always
    depends_on:
      - backend
    labels:
      - traefik.enable=true
      - traefik.http.routers.tmp-frontend.rule=Host(`tempfiles.ml`)
      - traefik.http.services.tmp-frontend.loadbalancer.server.port=80
      - "traefik.http.routers.tmp-frontend.entrypoints=websecure"
      - "traefik.http.routers.tmp-frontend.tls.certresolver=myresolver"
    networks:
      - traefik

  backend:
    container_name: tempfiles-backend
    image: minpeter/tempfiles-backend:latest
    restart: always
    volumes:
      - tempfiles-backend:/tmp
    environment:
      - BACKEND_BASEURL=https://api.tempfiles.ml
      - BACKEND_PORT=5000
      - JWT_SECRET=simplesecret
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=postgres
      - DB_USER=admin
      - DB_PASSWORD=admin
    depends_on:
      - db
    labels:
      - traefik.enable=true
      - traefik.http.routers.tmp-backend.rule=Host(`api.tempfiles.ml`)
      - traefik.http.services.tmp-backend.loadbalancer.server.port=5000
      - "traefik.http.routers.tmp-backend.entrypoints=websecure"
      - "traefik.http.routers.tmp-backend.tls.certresolver=myresolver"
    networks:
      - traefik

  db:
    container_name: tempfiles-db
    image: postgres:latest
    restart: always
    volumes:
      - tempfiles-db:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=postgres
    networks:
      - traefik

networks:
  traefik:
    external: true

volumes:
  tempfiles-db:
    driver: local
  tempfiles-backend:
    driver: local
